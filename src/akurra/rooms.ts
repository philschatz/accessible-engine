import { SpriteController, InstanceController, GameObject, IPosition, ObjectInstance, ROTATION_AMOUNT, UpdateFn } from '../common/engine'
import { ROOM_SIZE } from './util'

// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript/47593316#47593316
var LCG = (s: number) => () => (2 ** 31 - 1 & (s = Math.imul(48271, s))) / 2 ** 31

export function loadRooms (sprites: SpriteController, instances: InstanceController, playerUpdateFn: UpdateFn<any>, crateUpdateFn: UpdateFn<any>) {
  const player = instances.factory('player', sprites.get('PlayerStoppedDown'), -1000, playerUpdateFn)

  const bgZ = 100
  const obZ = 0
  const hoverZ = -1

  const Background = instances.simple(sprites, 'Background', bgZ)
  const Sand = instances.simple(sprites, 'Sand', bgZ)
  const SandBottom = instances.simple(sprites, 'SandBottom', bgZ)
  const SandLeft = instances.simple(sprites, 'SandLeft', bgZ)
  const Rock = instances.simple(sprites, 'Rock', obZ)
  const Bush = instances.simple(sprites, 'Bush', obZ)
  const WallTopRightDown = instances.simple(sprites, 'WallTopRightDown', obZ)
  const Crate = instances.factory('Crate', sprites.get('Crate'), obZ, crateUpdateFn)
  const GongRed = instances.simple(sprites, 'GongRed', obZ)
  const PillarRed = instances.simple(sprites, 'PillarRed', obZ)
  const PillarBlue = instances.simple(sprites, 'PillarBlue', obZ)
  const GongBlue = instances.simple(sprites, 'GongBlue', obZ)
  const WallTopUpDown = instances.simple(sprites, 'WallTopUpDown', obZ)
  const Key = instances.simple(sprites, 'Key', hoverZ)
  const Land = instances.simple(sprites, 'Land', bgZ)
  const Lock = instances.simple(sprites, 'Lock', obZ)
  const WallTopLeftRight = instances.simple(sprites, 'WallTopLeftRight', obZ)
  const WallTopUpLeft = instances.simple(sprites, 'WallTopUpLeft', obZ)
  const Pedestal = instances.simple(sprites, 'Pedestal', obZ)
  const LandCorner = instances.simple(sprites, 'LandCorner', bgZ)
  const LandBottom = instances.simple(sprites, 'LandBottom', bgZ)
  const Land2 = instances.simple(sprites, 'Land2', bgZ)
  const LandLeft = instances.simple(sprites, 'LandLeft', bgZ)
  const Wall = instances.simple(sprites, 'Wall', obZ)
  const WallVert = instances.simple(sprites, 'WallVert', obZ)
  const TreeTop = instances.simple(sprites, 'TreeTop', hoverZ)
  const TreeBottom = instances.simple(sprites, 'TreeBottom', obZ)
  const Water = instances.simple(sprites, 'Water', obZ)

  const GrassCorner = instances.simple(sprites, 'GrassCorner', bgZ)
  const GrassBottom = instances.simple(sprites, 'GrassBottom', bgZ)
  const GrassMid = instances.simple(sprites, 'Grass', bgZ)
  const GrassLeft = instances.simple(sprites, 'GrassLeft', bgZ)
  const GrassTopLeft = instances.simple(sprites, 'GrassTopLeft', bgZ)
  const GrassTop = instances.simple(sprites, 'GrassTop', bgZ)
  const GrassTopRight = instances.simple(sprites, 'GrassTopRight', bgZ)

  const NextRoomArrow = instances.simple(sprites, 'NextRoomArrow', bgZ)

  const FieldCorner = instances.simple(sprites, 'FieldCorner', bgZ)
  const FieldBottom = instances.simple(sprites, 'FieldBottom', bgZ)
  const Field = instances.simple(sprites, 'Field', bgZ)
  const Field2 = instances.simple(sprites, 'Field2', bgZ)
  const FieldTopLeft = instances.simple(sprites, 'FieldTopLeft', bgZ)
  const FieldTop = instances.simple(sprites, 'FieldTop', bgZ)
  const FieldLeft = instances.simple(sprites, 'FieldLeft', bgZ)

  const WallLadder = instances.simple(sprites, 'WallLadder', bgZ)

  const Hole = instances.simple(sprites, 'Hole', obZ)
  const HoleStraw = instances.simple(sprites, 'HoleStraw', obZ)

  const BigDoor0 = instances.simple(sprites, 'BigDoor0', obZ)
  const BigDoor1 = instances.simple(sprites, 'BigDoor1', obZ)
  const BigDoor2 = instances.simple(sprites, 'BigDoor2', obZ)
  const BigDoor3 = instances.simple(sprites, 'BigDoor3', obZ)
  const BigDoor4 = instances.simple(sprites, 'BigDoor4', obZ)
  const BigDoor5 = instances.simple(sprites, 'BigDoor5', obZ)
  const BigDoor6 = instances.simple(sprites, 'BigDoor6', obZ)
  const BigDoor7 = instances.simple(sprites, 'BigDoor7', obZ)
  const BigDoor8 = instances.simple(sprites, 'BigDoor8', obZ)
  const BigDoor9 = instances.simple(sprites, 'BigDoor9', obZ)
  const BigDoor10 = instances.simple(sprites, 'BigDoor10', obZ)
  const BigDoor11 = instances.simple(sprites, 'BigDoor11', obZ)
  const BigDoor12 = instances.simple(sprites, 'BigDoor12', obZ)
  const BigDoor13 = instances.simple(sprites, 'BigDoor13', obZ)
  const BigDoor14 = instances.simple(sprites, 'BigDoor14', obZ)
  const BigDoor15 = instances.simple(sprites, 'BigDoor15', obZ)

  const Stump = instances.simple(sprites, 'Stump', obZ)
  const Pit = instances.simple(sprites, 'Pit', bgZ)

  const ArrowLeft = instances.simple(sprites, 'ArrowLeft', obZ)
  const ArrowLeftDisabled = instances.simple(sprites, 'ArrowLeftDisabled', obZ)

  const ArrowDown = instances.simple(sprites, 'ArrowDown', obZ)
  const ArrowDownDisabled = instances.simple(sprites, 'ArrowDownDisabled', obZ)
  const ArrowUp = instances.simple(sprites, 'ArrowUp', obZ)
  const ArrowUpDisabled = instances.simple(sprites, 'ArrowUpDisabled', obZ)

  function g (item: GameObject<any>, pos: IPosition) {
    // convert from grid coordinates to pixels
    const o = item.new(pos, {})
    return o
  }

  function i (item: GameObject<any>) {
    const pos = { x: x++, y }
    return g(item, pos)
  }

  function o (item: GameObject<any>) {
    return g(item, { x, y })
  }

  const rand = LCG(2020)

  // Setart each Ocean tile at a random spot so the ocean waves will crest randomly
  function waterAnim (o: ObjectInstance<any>) {
    const next = Math.round(rand() * 1000)
    o.sprite.startTick = -next
  }

  let y = 0
  let x = 0
  let xStart = 0

  // -------------------------------
  // Puzzle Room
  // -------------------------------

  // Row 0
  waterAnim(i(Water))
  i(WallTopUpDown).flip(true, false)
  i(Rock)
  i(Rock)
  i(Rock)
  i(Rock)
  i(Rock)
  i(Rock)
  i(WallTopUpDown)
  i(Bush)
  i(Bush)
  i(Bush)
  i(Bush)
  i(Bush)
  i(Stump) // Land + Arrow
  i(Stump) // Land + Arrow
  i(Bush)
  i(Bush)
  i(Bush)
  i(WallTopUpLeft).flip(true, false)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)

  // Row 1
  x = xStart; y += 1
  waterAnim(i(Water))
  i(WallTopUpDown).flip(true, false)
  i(GrassMid)
  o(Key).offsetPos = { x: 0, y: -5 }
  i(Pedestal)
  i(GrassMid)
  i(WallTopRightDown)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopUpLeft)
  i(Rock)
  i(Rock)
  i(Rock)
  i(Rock)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Rock)
  i(GongRed)
  i(WallVert).flip(true, false)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)

  // Row 2
  x = xStart; y += 1
  waterAnim(i(Water))
  i(WallTopUpDown).flip(true, false)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(WallTopUpDown)
  i(Wall)
  i(Wall)
  i(WallVert)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Rock)
  i(Land)
  i(WallVert).flip(true, false)
  i(WallTopUpDown).flip(true, false)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)

  // Row 3
  x = xStart; y += 1
  waterAnim(i(Water))
  i(WallTopUpDown).flip(true, false)
  i(WallTopRightDown)
  i(WallLadder)
  i(WallTopLeftRight)
  i(WallTopUpLeft)
  i(Wall)
  i(Wall)
  i(WallVert)
  i(GrassTopLeft)
  i(GrassTop)
  i(GrassTopRight)
  i(Stump)
  i(Stump)
  i(Land)
  i(Land)
  i(Land)
  i(Rock)
  i(HoleStraw)
  i(WallVert).flip(true, false)
  i(WallTopUpLeft).flip(true, false)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)

  // Row 4
  x = xStart; y += 1
  waterAnim(i(Water))
  i(WallTopUpLeft).flip(true, false)
  i(WallTopUpLeft)
  i(WallLadder)
  i(Wall)
  i(WallVert)
  o(Key).offsetPos = { x: 0, y: -5 }
  i(Pedestal)
  i(PillarBlue)
  i(Land)
  i(GrassLeft)
  i(GrassMid)
  i(GrassLeft).flip(true, false)
  o(Crate)
  i(Land)
  i(Hole)
  i(Land)
  i(Land)
  i(Land)
  o(Crate)
  i(Land)
  i(Land)
  i(WallVert).flip(true, false)
  i(WallVert).flip(true, false)
  i(Wall)
  i(Wall)
  i(Wall)

  // Row 5
  x = xStart; y += 1
  waterAnim(i(Water))
  i(WallVert).flip(true, false)
  i(WallVert)
  i(WallLadder)
  i(Wall)
  i(WallVert)
  i(Rock)
  i(Rock)
  i(Land)
  i(GrassCorner)
  i(GrassBottom)
  i(GrassCorner).flip(true, false)
  i(Stump)
  o(Crate)
  i(Land)
  i(Land)
  i(FieldTopLeft)
  i(FieldTop)
  i(FieldTopLeft).flip(true, false)
  i(Land)
  i(Land).flip(true, false)
  i(WallVert).flip(true, false)
  i(Wall)
  i(Wall)
  i(Wall)

  // Row 6
  x = xStart; y += 1
  waterAnim(i(Water))
  i(WallVert).flip(true, false)
  i(WallVert)
  o(Crate)
  i(Sand)
  i(Sand)
  i(LandLeft)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Pit)
  i(Land)
  i(FieldLeft)
  i(Rock)
  i(FieldLeft).flip(true, false)
  i(Land)
  i(Land)
  i(HoleStraw)
  i(Land)
  i(Land)
  i(Land)

  // Row 7
  x = xStart; y += 1
  waterAnim(i(Water))
  waterAnim(i(Water))
  i(SandLeft)
  i(Sand)
  i(Sand)
  i(LandLeft)
  i(Land)
  i(Rock)
  i(Rock)
  i(Rock)
  i(Rock)
  i(Rock)
  i(Land)
  i(Land)
  i(Land)
  i(FieldCorner)
  i(FieldBottom)
  i(FieldCorner).flip(true, false)
  i(Land)
  i(Land)
  i(Hole) // No Escape!
  i(Land)
  i(Land)
  i(Land)

  // Row 8
  x = xStart; y += 1
  waterAnim(i(Water))
  waterAnim(i(Water))
  i(SandLeft)
  i(Sand)
  i(Sand)
  i(LandLeft)
  i(Land)
  i(Rock)
  i(GongBlue)
  i(PillarRed)
  i(Land)
  i(Hole)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(WallTopUpLeft).flip(true, true)
  i(WallTopLeftRight).flip(false, true)
  i(WallTopLeftRight).flip(false, true)
  i(WallTopLeftRight).flip(false, true)
  i(WallTopLeftRight).flip(false, true)

  // Row 9
  x = xStart; y += 1
  waterAnim(i(Water))
  waterAnim(i(Water))
  i(SandLeft)
  i(Sand)
  i(Sand)
  i(WallTopUpLeft).flip(true, true)
  i(WallTopLeftRight).flip(false, true)
  i(WallTopLeftRight).flip(false, true)
  i(WallTopLeftRight).flip(false, true)
  i(WallTopLeftRight).flip(false, true)
  i(WallTopLeftRight).flip(false, true)
  i(WallTopLeftRight).flip(false, true)
  i(WallTopLeftRight).flip(false, true)
  i(WallTopLeftRight).flip(false, true)
  i(WallTopLeftRight).flip(false, true)
  i(WallTopUpLeft).flip(false, true)
  i(Land)
  i(Land)
  i(Land)
  i(WallTopUpDown)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)

  // Row 9
  x = xStart; y += 1
  waterAnim(i(Water))
  waterAnim(i(Water))
  i(Rock)
  i(Sand)
  i(TreeTop)
  i(WallTopUpDown).flip(true, false)
  i(GrassBottom)
  i(GrassBottom)
  i(GrassBottom)
  i(GrassBottom)
  i(GrassBottom)
  i(GrassBottom)
  i(GrassBottom)
  i(GrassBottom)
  i(GrassBottom)
  i(WallTopUpDown)
  i(Land)
  i(Land)
  i(Land)
  i(WallTopUpDown)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)

  // Row 10
  x = xStart; y += 1
  waterAnim(i(Water))
  waterAnim(i(Water))
  i(Rock)
  o(Rock) // Blocker
  i(Sand)
  i(TreeTop)
  i(WallTopUpDown).flip(true, false)
  i(Rock)
  i(Rock)
  i(Rock)
  i(Rock)
  i(Rock)
  i(Rock)
  i(Rock)
  i(Rock)
  i(Rock)
  i(WallTopUpDown)
  i(Stump)
  i(Stump)
  i(Stump)
  i(WallTopUpDown)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)

  // -------------------------------
  // Big Door Room
  // -------------------------------
  xStart = ROOM_SIZE.width
  x = xStart; y = 0

  // Row 0
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopUpLeft)
  i(BigDoor0)
  i(BigDoor1)
  i(BigDoor2)
  i(BigDoor3)
  i(WallTopUpLeft).flip(true)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)

  // Row 1
  x = xStart; y += 1
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(WallVert)
  i(BigDoor4)
  i(BigDoor5)
  i(BigDoor6)
  i(BigDoor7)
  i(WallVert).flip(true)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)

  // Row 2
  x = xStart; y += 1
  i(GrassMid)
  i(WallTopUpDown)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(WallVert)
  i(BigDoor8)
  i(BigDoor9)
  i(BigDoor10)
  i(BigDoor11)
  i(WallVert).flip(true)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(WallTopUpDown).flip(true)
  i(GrassMid)

  // Row 3
  x = xStart; y += 1
  i(WallTopLeftRight)
  i(WallTopUpLeft)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(WallVert)
  i(BigDoor12)
  i(BigDoor13)
  i(BigDoor14)
  i(BigDoor15)
  i(WallVert).flip(true)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(WallTopUpLeft).flip(true)
  i(WallTopLeftRight)

  // Row 4
  x = xStart; y += 1
  i(Wall)
  i(WallVert)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(WallVert)
  i(Field)
  i(Field)
  i(Field)
  i(Field)
  i(WallVert).flip(true)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(WallVert).flip(true)
  i(Wall)

  // Row 5
  x = xStart; y += 1
  i(Wall)
  i(WallVert)
  i(PillarRed)
  i(FieldCorner)
  i(Field)
  i(Field)
  i(Field2)
  i(Field2)
  i(Field)
  i(Field2)
  i(Field)
  i(Field)
  i(Field)
  i(Field2)
  i(Field)
  i(Field)
  i(Field)
  i(Field2)
  i(Field)
  i(FieldBottom)
  i(FieldCorner).flip(true)
  i(Rock)
  i(WallVert).flip(true)
  i(Wall)

  // Row 7
  x = xStart; y += 1
  o(NextRoomArrow).setOffset({ x: 0, y: 8 }).rotate(ROTATION_AMOUNT.LEFT)
  i(Land)
  i(Land)
  i(ArrowDown)
  i(Land)
  i(FieldCorner)
  i(Field)
  i(Field)
  i(Field2)
  i(Field)
  i(Field)
  i(Field2)
  i(Field)
  i(Field)
  i(Field)
  i(Field)
  i(Field)
  i(Field2)
  i(Field)
  i(FieldCorner).flip(true)
  i(Land2)
  i(Land)
  i(ArrowUpDisabled)
  i(Land)
  o(NextRoomArrow).setOffset({ x: 0, y: 8 })
  i(Land)

  // Row 8
  x = xStart; y += 1
  i(Land)
  i(Land)
  i(ArrowDownDisabled)
  i(Land)
  i(Land)
  i(FieldCorner)
  i(FieldBottom)
  i(FieldBottom)
  i(Field)
  i(Field)
  i(Field)
  i(Field)
  i(Field)
  i(Field)
  i(Field2)
  i(Field)
  i(FieldBottom)
  i(FieldCorner).flip(true)
  i(Land)
  i(Land)
  i(Land)
  i(ArrowUp)
  i(Land)
  i(Land)

  // Row 9
  x = xStart; y += 1
  i(WallTopLeftRight).flip(undefined, true)
  i(WallTopUpLeft).flip(undefined, true)
  i(Rock)
  i(Rock)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(FieldCorner)
  i(FieldBottom)
  i(FieldBottom)
  i(FieldBottom)
  i(FieldBottom)
  i(FieldBottom)
  i(FieldBottom)
  i(FieldCorner).flip(true)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Rock)
  i(Land)
  i(WallTopUpLeft).flip(true, true)
  i(WallTopLeftRight).flip(undefined, true)

  // Row 10
  x = xStart; y += 1
  i(GrassMid)
  i(WallTopUpDown)
  i(GongRed)
  i(Land)
  i(Hole)
  i(Land)
  o(Crate)
  i(Land)
  i(Land2)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(Land2)
  i(Land)
  i(Land)
  i(Lock)
  i(Land)
  i(WallTopUpDown).flip(true)
  i(GrassMid)

  // Row 11
  x = xStart; y += 1
  i(GrassMid)
  i(WallTopRightDown).flip(undefined, true)
  i(WallTopLeftRight).flip(undefined, true)
  i(WallTopLeftRight).flip(undefined, true)
  i(WallTopLeftRight).flip(undefined, true)
  i(WallTopLeftRight).flip(undefined, true)
  i(WallTopLeftRight).flip(undefined, true)
  i(WallTopLeftRight).flip(undefined, true)
  i(WallTopLeftRight).flip(undefined, true)
  i(WallTopUpLeft).flip(undefined, true)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(WallTopUpLeft).flip(true, true)
  i(WallTopLeftRight).flip(undefined, true)
  i(WallTopLeftRight).flip(undefined, true)
  i(WallTopLeftRight).flip(undefined, true)
  i(WallTopLeftRight).flip(undefined, true)
  i(WallTopLeftRight).flip(undefined, true)
  i(WallTopLeftRight).flip(undefined, true)
  i(WallTopLeftRight).flip(undefined, true)
  i(WallTopRightDown).flip(true, true)
  i(GrassMid)

  // Row 12
  x = xStart; y += 1
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(WallTopUpDown)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(WallTopUpDown).flip(true)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)

  // -------------------------------
  // Initial Shipwreck Room
  // -------------------------------
  x = xStart; y += 1

  // Row0
  i(Rock)
  i(GrassLeft)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(WallTopUpDown)
  i(Land)
  o(NextRoomArrow).setOffset({ x: 8, y: 0 }).rotate(ROTATION_AMOUNT.UP)
  i(Land)
  i(Land)
  i(Land)
  i(WallTopUpDown).flip(true)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassMid)
  i(GrassLeft).flip(true)
  i(Rock)

  // Row1
  x = xStart; y += 1
  i(Rock)
  i(GrassLeft)
  i(WallTopRightDown)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopUpLeft)
  i(Land)
  i(Land)
  i(Land)
  i(Land)
  i(WallTopUpLeft).flip(true)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopRightDown).flip(true)
  i(GrassMid)
  i(GrassLeft).flip(true)
  i(Rock)

  // Row2
  x = xStart; y += 1
  i(Bush)
  i(GrassLeft)
  i(WallTopUpDown)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(WallVert)
  i(Rock)
  i(Land)
  i(Land)
  i(Rock)
  i(WallVert).flip(true)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(WallTopUpDown).flip(true)
  i(GrassMid)
  i(GrassLeft).flip(true)
  i(Bush)

  // Row3
  x = xStart; y += 1
  i(Bush)
  i(GrassCorner)
  i(WallTopUpDown)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(WallVert)
  o(Land)
  i(ArrowLeftDisabled)
  o(Land)
  i(ArrowLeftDisabled)
  o(Land)
  i(ArrowLeft)
  o(Land)
  i(Lock)
  i(WallVert).flip(true)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(Wall)
  i(WallTopUpDown).flip(true)
  i(GrassBottom)
  i(GrassCorner).flip(true)
  i(Bush)

  // Row4
  x = xStart; y += 1
  i(Bush)
  i(Bush)
  i(WallTopUpDown)
  o(Background)
  i(GongRed)
  i(Sand)
  i(Sand)
  i(Rock)
  i(Rock)
  i(Sand)
  i(LandCorner)
  i(LandBottom)
  i(LandBottom)
  i(LandBottom)
  i(LandBottom)
  i(LandCorner).flip(true)
  i(Sand)
  i(Rock)
  o(Key).offsetPos = { x: 0, y: -5 }
  i(Pedestal)
  i(Rock)
  i(Sand)
  i(WallTopUpDown).flip(true)
  i(Bush)
  i(Bush)
  i(Bush)

  // Row5
  x = xStart; y += 1
  i(Bush)
  i(TreeTop)
  i(WallTopUpDown)
  i(Rock)
  i(Rock)
  i(Sand)
  i(Sand)
  i(Rock)
  i(Rock)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Rock)
  o(Sand)
  i(PillarRed)
  i(Rock)
  i(Sand)
  i(WallTopUpDown).flip(true)
  i(TreeTop)
  i(TreeTop)
  i(TreeTop)

  // Row6
  x = xStart; y += 1
  i(Bush)
  i(TreeBottom)
  i(WallTopUpDown)
  i(Rock)
  i(Sand)
  o(Sand)
  o(Crate)
  i(Sand)
  o(Crate)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Rock)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(WallTopUpDown).flip(true)
  i(TreeBottom)
  i(TreeBottom)
  i(TreeBottom)

  // Row7
  x = xStart; y += 1
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopUpLeft)
  i(Rock)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  o(player) // PLAYER
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(Sand)
  i(WallTopUpLeft).flip(true)
  i(WallTopLeftRight)
  i(WallTopLeftRight)
  i(WallTopLeftRight)

  // Row8
  x = xStart; y += 1
  i(Wall)
  i(Wall)
  i(WallVert)
  i(SandBottom)
  i(SandBottom)
  i(SandBottom)
  i(SandBottom)
  i(SandBottom)
  i(SandBottom)
  i(SandBottom)
  i(SandBottom)
  i(SandBottom)
  i(SandBottom)
  i(SandBottom)
  i(SandBottom)
  i(SandBottom)
  i(SandBottom)
  i(SandBottom)
  i(SandBottom)
  i(SandBottom)
  i(WallVert).flip(true)
  i(Wall)
  i(Wall)
  i(Wall)

  // Row9
  x = xStart; y += 1
  i(Wall)
  i(Wall)
  i(WallVert)
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  i(WallVert).flip(true)
  i(Wall)
  i(Wall)
  i(Wall)

  // Row10
  x = xStart; y += 1
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))

  // Row11
  x = xStart; y += 1
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
  waterAnim(i(Water))
}
